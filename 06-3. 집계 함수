1. 조건에 맞는 데이터 개수 세기 – COUNT()
-- 전체 고객 수
SELECT COUNT(*) FROM CUSTOMER;

-- 매장(STORE_ID)별 고객 수
SELECT STORE_ID, COUNT(*) AS CNT 
FROM CUSTOMER 
GROUP BY STORE_ID;

-- 매장과 활성 상태(ACTIVE)별 고객 수
SELECT STORE_ID, ACTIVE, COUNT(*) AS CNT 
FROM CUSTOMER 
GROUP BY STORE_ID, ACTIVE;

-- ADDRESS 테이블에서 전체 행 수와 ADDRESS2가 NULL이 아닌 행 수
SELECT COUNT(*) AS ALL_CNT, COUNT(ADDRESS2) AS EX_NULL 
FROM ADDRESS;

-- 전체 개수, NULL 제외한 STORE_ID 개수, 중복 제거한 STORE_ID 개수
SELECT COUNT(*), COUNT(STORE_ID), COUNT(DISTINCT STORE_ID) 
FROM CUSTOMER;

COUNT(컬럼명)은 NULL을 제외하고 개수를 세고, COUNT(*)는 NULL 포함 전체 행 수를 셉니다.

2. 합계 구하기 – SUM()
-- 전체 결제 금액의 합
SELECT SUM(AMOUNT) 
FROM PAYMENT;

-- 고객별 결제 금액 합
SELECT CUSTOMER_ID, SUM(AMOUNT) 
FROM PAYMENT 
GROUP BY CUSTOMER_ID;

3. 평균 구하기 – AVG()
-- 전체 결제 금액 평균
SELECT AVG(AMOUNT) 
FROM PAYMENT;

-- 고객별 결제 금액 평균
SELECT CUSTOMER_ID, AVG(AMOUNT) 
FROM PAYMENT 
GROUP BY CUSTOMER_ID;

4. 최소값과 최대값 구하기 – MIN(), MAX()
-- 전체 결제 금액의 최소값과 최대값
SELECT MIN(AMOUNT), MAX(AMOUNT) 
FROM PAYMENT;

-- 고객별 최소/최대 결제 금액
SELECT CUSTOMER_ID, MIN(AMOUNT), MAX(AMOUNT) 
FROM PAYMENT 
GROUP BY CUSTOMER_ID;

5. 부분합과 총합 구하기 – ROLLUP
SELECT CUSTOMER_ID, STAFF_ID, SUM(AMOUNT)
FROM PAYMENT
GROUP BY CUSTOMER_ID, STAFF_ID WITH ROLLUP;

ROLLUP은 위에서부터 그룹별 합계를 만들고 마지막에 전체 총합을 만들어줍니다.

6. 표준편차 구하기 – STDDEV(), STDDEV_SAMP()
SELECT STDDEV(AMOUNT), STDDEV_SAMP(AMOUNT) 
FROM PAYMENT;

STDDEV() 또는 STDDEV_POP() : 모집단 기준 표준편차
STDDEV_SAMP() : 표본 기준 표준편차
