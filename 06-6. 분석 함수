1. LAG() / LEAD()
이전 행(LAG) 또는 다음 행(LEAD)의 값을 참조하는 함수입니다. 시계열 분석이나 차이 계산 등에 활용됩니다.

SELECT X.PAYMENT_DATE,
       LAG(X.AMOUNT) OVER(ORDER BY X.PAYMENT_DATE ASC) AS LAG_AMOUNT,
       X.AMOUNT,
       LEAD(X.AMOUNT) OVER(ORDER BY X.PAYMENT_DATE ASC) AS LEAD_AMOUNT
FROM () AS X
ORDER BY X.PAYMENT_DATE;

SELECT X.PAYMENT_DATE,
       LAG(X.AMOUNT, 2) OVER(ORDER BY X.PAYMENT_DATE ASC) AS LAG_AMOUNT,
       X.AMOUNT,
       LEAD(X.AMOUNT, 2) OVER(ORDER BY X.PAYMENT_DATE ASC) AS LEAD_AMOUNT
FROM () AS X
ORDER BY X.PAYMENT_DATE;

특징:
LAG(column, offset, default)
LEAD(column, offset, default)
특정 간격만큼 이전/이후 값을 참조 가능


2. CUME_DIST()
누적 분포를 계산합니다. 값이 클수록 1에 가까워지며, 특정 값보다 작거나 같은 값의 비율을 나타냅니다.

SELECT X.CUSTOMER_ID, X.AMOUNT,
       CUME_DIST() OVER(ORDER BY X.AMOUNT DESC) AS CUME_DIST_VAL
FROM () AS X
ORDER BY X.AMOUNT DESC;

특징:
[0, 1] 사이의 실수 반환
분위 분석 및 상대 비교용


3. PERCENT_RANK()
상대 순위를 계산합니다. 전체 중 몇 번째에 위치하는지를 0~1 사이의 값으로 나타냅니다.

SELECT X.CUSTOMER_ID, X.AMOUNT,
       PERCENT_RANK() OVER(ORDER BY X.AMOUNT DESC) AS PERCENT_RANK_VAL
FROM () AS X
ORDER BY X.AMOUNT DESC;

특징:
첫 번째 값은 항상 0
PERCENT_RANK = (RANK - 1) / (ROW_COUNT - 1)


4. FIRST_VALUE() / LAST_VALUE()
윈도우 범위 내에서 가장 첫 번째 또는 마지막 값을 반환합니다.

SELECT X.PAYMENT_DATE, X.AMOUNT,
       FIRST_VALUE(X.AMOUNT) OVER(ORDER BY X.PAYMENT_DATE) AS F_VALUE,
       LAST_VALUE(X.AMOUNT) OVER(
           ORDER BY X.PAYMENT_DATE
           RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
       ) AS L_VALUE
FROM () AS X
ORDER BY X.PAYMENT_DATE;

주의사항:
LAST_VALUE()는 기본적으로 현재 행까지만 보기 때문에, 전체 범위 보려면 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING 같은 윈도우 프레임을 명시해야 합니다.
