#WHERE 문으로 특정 값 조회하기
비교연산자 : <, <=, =, >, >=, <>, !=, !<, !>
논리연산자 : ALL, AND, ANY, BETWEEN, EXISTS, IN, LIKE, NOT, OR, SOME

#NULL 조회하기
SELECT * FROM ADDRESS WHERE ADDRESS2 IS NULL; #NULL인 데이터 조회
SELECT * FROM ADDRESS WHERE ADDRESS2 IS NOT NULL; #NULL이 아닌 데이터를 조회
SELECT * FROM ADDRESS WHERE ADDRESS2 = ''; #공백 조회

#ORDER BY 문으로 열 기준 정렬하기
*ASC, DESC는 ORDER BY 문과 세트이다
SELECT * FROM CUSTOMER ORDER BY STORE_ID DESC, FIRST_NAME ASC LIMIT 10; LIMIT으로 TOP 10 출력가능
SELECT * FROM CUSTOMER ORDER BY STORE_ID DESC, FIRST_NAME ASC LIMIT 100, 10; #LIMIT으로 범위를 지정 가능하다
SELECT * FROM CUSTOMER ORDER BY STORE_ID DESC, FIRST_NAME ASC LIMIT 10 OFFSET 100; #OFFSET은 LIMIT과 세트

#와일드카드로 문자열 조회하기
LIKE로 조회
%, ESCAPE, _ 는 LIKE와 같이 쓰임

#REGEXP로 더 다양하게 데이터 조회하기
., *, +, ^, $, |, [], [^], {n}, {m,n}
SELECT * FROM CUSTOMER WHERE FIRST_NAME REGEXP '^K:N$'; #K로 시작하거나 N으로 끝나는 데이터 조회
SELECT * FROM CUSTOMER WHERE FIRST_NAME REGEXP 'K[L-N]'; #K와 함께 L과 N 사이의 글자를 포함한 데이터 조회
SELECT * FROM CUSTOMER WHERE FIRST_NAME REGEXP 'K[^L-N]'; #K와 함께 L과 N 사이의 글자를 포함하지 않는 데이터 조회

#GROUP BY 문으로 데이터 그룹화하기
*COUNT()는 GROUP BY와 세트이다
SELECT SPECIAL_FEATURES, COUNT(*) AS CNT FROM FILM 
GROUP_BY SPECIAL_FEATURES;

SELECT SPECIAL_FEATURES, RATING, COUNT(*) AS CNT FROM FILM 
GROUP_BY SPECIAL_FEATURES, RATING, CNT DESC; #GROUP BY와 DESC과 세트
*SELECT 문과 GROUP BY 문의 열 이름을 달리하면 안됨

#HAVING 문으로 그룹화한 데이터 필터링하기
*HAVING은 GROUP BY와 세트
SELECT SPECIAL_FEATURES, RATING FROM FILM
GROUP BY SPECIAL_FEATURES, RATING
HAVING RATING = 'G'; 

#DISTINCT 문으로 중복된 데이터 제거하기
SELECT DISTINCT SPECIAL_FEATURES, RATING FROM FILM; #중복 제거하기

#[테이블 생성 및 테이블 지정]
CREATE DATABASE "데이터베이스명" #데이터베이스 만들기
USE DOITSQL;

#AUTO_INCREMENT로 데이터 자동 입력하기
CREATE TABLE DOIT_INCREMENT( 
COL_1 INT AUTO_INCREMENT PRIMARY KEY,
COL_2 VARCHAR(50),
COL_3 INT
);
INSERT INTO DOIT_INCREMENT (COL_2, COL_3) VALUES ('1 자동입력', 1); #데이터 입력 -> INSERT INTO, VALUES
INSERT INTO DOIT_INCREMENT (COL_2, COL_3) VALUES ('2 자동입력', 2);

SELECT LAST_INSERT_ID(); #AUTO_INCREMENT가 적용된 열의 마지막 데이터 조회
ALTER TABLE DOIT_INCREMENT=100; #자동으로 입력하는 값을 100부터 시작
SET @@AUTO_INCREMENT_INCREMENT=5; #자동으로 입력되는 값을 5로 설정

#조회 결과를 다른 테이블에 입력
INSERT INTO DOIT_INSERT_SELECT_TO 
SELECT * FROM DOIT_INSERT_SELECT_FROM

#새 테이블에 조회 결과 입력하기
CREATE TABLE DOIT_SELECT_NEW AS (SELECT * FROM DOIT_INSERT_SELECT_FROM);
SELECT * FROM DOIT_SELECT_NEW;

#외래키로 연결되어 있는 테이블에 데이터 입력 및 삭제하기
CREATE TABLE DOIT_PARENT (COL_1 INT PRIMARY KEY);
CREATE TABLE DOIT_CHILD (COL_1 INT);
ALTER TABLE DOIT_CHILD #자식테이블이 부모테이블을 참조한다는 것을 명시
ADD FOREHIN KEY (COL_1) REFERENCES DOIT_PARENT(COL_1) 
#1. 부모 테이블에 없는 데이터를 자식 테이블에 입력 못함
#2. 자식 테이블에도 있는 데이터를 부모 테이블에서 단독으로 삭제 못함
#3. 부모 테이블을 삭제하더라도 먼저 자식 테이블을 삭제해야 함(제약 조건 삭제 후 부모 테이블을 삭제)

ALTER TABLE DOIT_CHILD
DROP CONSTRAINT DOIT_CHILD_IBFK_1; #제약조건 제거
DROP TABLE DOIT_PARENT;

SET FOREIGN_KEY_CHECKS=0 #외래키 비활성
SET FOREIGN_KEY_CHECKS=1 #외래키 활성

#숫자형
정수형: TINYINT, SMALLINT, MEDINUMINT, INT, BIGINT
실수형: FLOAT, DOUBLE
#문자형
CHAR(n), VARCHAR(n), BINARY(n), VARBINARY(n)
#날짜형 및 시간형
TIME, DATE, DATETIME, TIMESTAMP
