#문자열과 문자열을 연결하는 함수 - CONCAT
SELECT CONCAT(FIRST_NAME, ', ', LAST_NAME) AS CUSTOMER_NAME FROM CUSTOMER;
SELECT CONCAT_WS(', ', FIRST_NAME, LAST_NAME, EMAIL) AS CUSTOMER_NAME FROM CUSTOMER; #구분자를 미리 정의해서 자동으로 적용
SELECT CONCAT(NULL, FIRST_NAME, LAST_NAME) AS CUSTOMER_NAME FROM CUSTOMER; #인수로 NULL을 입력할 경우 결과는 모두 NULL을 반환한다
SELECT CONCAT_WS(', ', FIRST_NAME, NULL, LAST_NAME) AS CUSTOMER_NAME FROM CUSTOMER; #구분 인수 뒤에 오는 NULL은 무시하여 건너 뛴다. 합치려는 열에 NULL이 있을 경우 NULL을 제외 후 출력한다

#데이터 형 변환 함수 - CAST, CONVERT
*CAST 및 CONVERT에 사용 가능한 데이터 유형 : BINARY, CHAR, DATE, DATETIME, TIME, DECIMAL, JSON, NCHAR, SIGNED, UNSIGNED
SELECT CAST(NOW() AS SIGNED) #날짜형을 숫자형으로 변환
SELECT CAST(20230819 AS DATE) #숫자형을 날짜형으로 변환
SELECT CAST(20230819 AS CHAR) #숫자형을 문자열로 변환

SELECT CONVERT(NOW(), SIGNED) #날짜형을 정수형으로 변환
SELECT CONVERT(20230819, DATE) #숫자형을 날짜형으로 변환
SELECT CONVERT(20230819, CHAR(5)) #데이터 길이 지정

SELECT CAST(9223372036854775807 AS UNSIGNED) + 1 #오버플로 방지, *오버플로: 데이터 유형에 따른 한계값을 넘은 것
SELECT CONVERT(9223372036854775807 AS UNSIGNED) + 1 #CAST뿐만 아니라 CONVERT도 마찬가지

#NULL을 대체하는 함수 - IFNULL, COALESCE
SELECT COL_1, IFNULL(COL_2, '') AS COL_2, COL_3, COL_4, COL_5 #IFNULL함수로 COL_2열의 NULL을 대체
FROM DOIT_NULL WHERE COL_1 = 1;
SELECT COL_1, IFNULL(COL_2, COL_3) AS COL_2, COL_3, COL_4, COL_5 #IFNULL함수로 COL_3열의 NULL을 대체
FROM DOIT_NULL WHERE COL_1 = 1;

SELECT COL_1, COALESCE(COL_2, COL_3, COL_4, COL_5) #COALESCE함수는 차례대로 NULL이 없는 데이터로 대체함. 마지막 인자에도 NULL이 있는 경우는 결국 NULL을 반환
FROM DOIT_NULL WHERE COL_1 = 2;

#소문자 혹은 대문자로 변경하는 함수 - LOWER, UPPER
SELECT 'Do it! SQL', LOWER('Do it! SQL'), UPPER('Do it! SQL');

#공백을 제거하는 함수 - LTRIM, RTRIM, TRIM
LTRIM 함수로 왼쪽 공백 제거
RTRIM 함수로 오른쪽 공백 제거
TRIM 함수로 양쪽 공백 제거
SELECT TRIM(BOTH '#' FROM '#    Do it! MySQL    #); #TRIM 함수수로 양쪽 문자 제거

#문자열 크기 또는 개수를 반환하는 함수 - LENGTH, CHAR_LENGTH
SELECT LENGTH('Do it! MySQL'), LENGTH('두잇 마이에스큐엘'):
CHAR_LENGTH('Do it! MySQL'), CHAR_LENGTH('두잇 마이에스큐엘');

#특정 문자까지의 문자열 길이를 반환하는 함수
SELECT 'Do it!! SQL', POSITTION('!' IN 'Do it!! MySQL'); # !까지해서 문자열 길이를 구하기
SELECT 'Do it!! SQL', POSITION('#' IN 'Do it!! MySQL'); #탐색 문자가 없는 경우 0을 반환

#지정한 범위의 문자열을 반환하는 함수 - SUBSTRING
SELECT 'Do it MySQL', SUBSTRING('Do it! MySQL', 4, 2);
SELECT FIRST_NAME, SBUSTRING(FIRST_NAE, 2, 3) FROM CUSTOMER; #열 이름 전달
SELECT SUBSTRING('abc@email.com', 1, POSIITION('@' IN 'abc@email.com') - 1); #SUBSTRING과 POSITOIN 함수 조합
